//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
// 
#pragma warning disable 1591

namespace is2WakeUpDBCon.is2oshirase {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://Walkthrough/XmlWebServices/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Get_MessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OshiraseTopNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sel_OshiraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Ins_OshiraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upd_OshiraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Del_OshiraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upd_HyoujiFGOperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDB2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://wwwis2.fukutsu.co.jp/is2/is2oshirase/Service1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Get_MessageCompletedEventHandler Get_MessageCompleted;
        
        /// <remarks/>
        public event Get_OshiraseTopNCompletedEventHandler Get_OshiraseTopNCompleted;
        
        /// <remarks/>
        public event Sel_OshiraseCompletedEventHandler Sel_OshiraseCompleted;
        
        /// <remarks/>
        public event Ins_OshiraseCompletedEventHandler Ins_OshiraseCompleted;
        
        /// <remarks/>
        public event Upd_OshiraseCompletedEventHandler Upd_OshiraseCompleted;
        
        /// <remarks/>
        public event Del_OshiraseCompletedEventHandler Del_OshiraseCompleted;
        
        /// <remarks/>
        public event Upd_HyoujiFGCompletedEventHandler Upd_HyoujiFGCompleted;
        
        /// <remarks/>
        public event wakeupDBCompletedEventHandler wakeupDBCompleted;
        
        /// <remarks/>
        public event wakeupDB2CompletedEventHandler wakeupDB2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_Message", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_Message(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Get_Message", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_Message(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_Message", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_Message(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_MessageAsync(string[] sUser, string[] sKey) {
            this.Get_MessageAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Get_MessageAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Get_MessageOperationCompleted == null)) {
                this.Get_MessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_MessageOperationCompleted);
            }
            this.InvokeAsync("Get_Message", new object[] {
                        sUser,
                        sKey}, this.Get_MessageOperationCompleted, userState);
        }
        
        private void OnGet_MessageOperationCompleted(object arg) {
            if ((this.Get_MessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_MessageCompleted(this, new Get_MessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_OshiraseTopN", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_OshiraseTopN(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Get_OshiraseTopN", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_OshiraseTopN(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_OshiraseTopN", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_OshiraseTopN(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_OshiraseTopNAsync(string[] sUser, string[] sKey) {
            this.Get_OshiraseTopNAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Get_OshiraseTopNAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Get_OshiraseTopNOperationCompleted == null)) {
                this.Get_OshiraseTopNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OshiraseTopNOperationCompleted);
            }
            this.InvokeAsync("Get_OshiraseTopN", new object[] {
                        sUser,
                        sKey}, this.Get_OshiraseTopNOperationCompleted, userState);
        }
        
        private void OnGet_OshiraseTopNOperationCompleted(object arg) {
            if ((this.Get_OshiraseTopNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OshiraseTopNCompleted(this, new Get_OshiraseTopNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Sel_Oshirase", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Sel_Oshirase(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Sel_Oshirase", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSel_Oshirase(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Sel_Oshirase", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndSel_Oshirase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Sel_OshiraseAsync(string[] sUser, string[] sKey) {
            this.Sel_OshiraseAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Sel_OshiraseAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Sel_OshiraseOperationCompleted == null)) {
                this.Sel_OshiraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSel_OshiraseOperationCompleted);
            }
            this.InvokeAsync("Sel_Oshirase", new object[] {
                        sUser,
                        sKey}, this.Sel_OshiraseOperationCompleted, userState);
        }
        
        private void OnSel_OshiraseOperationCompleted(object arg) {
            if ((this.Sel_OshiraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sel_OshiraseCompleted(this, new Sel_OshiraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Ins_Oshirase", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Ins_Oshirase(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Ins_Oshirase", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIns_Oshirase(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ins_Oshirase", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndIns_Oshirase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Ins_OshiraseAsync(string[] sUser, string[] sKey) {
            this.Ins_OshiraseAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Ins_OshiraseAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Ins_OshiraseOperationCompleted == null)) {
                this.Ins_OshiraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIns_OshiraseOperationCompleted);
            }
            this.InvokeAsync("Ins_Oshirase", new object[] {
                        sUser,
                        sKey}, this.Ins_OshiraseOperationCompleted, userState);
        }
        
        private void OnIns_OshiraseOperationCompleted(object arg) {
            if ((this.Ins_OshiraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ins_OshiraseCompleted(this, new Ins_OshiraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Upd_Oshirase", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Upd_Oshirase(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Upd_Oshirase", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpd_Oshirase(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Upd_Oshirase", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndUpd_Oshirase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Upd_OshiraseAsync(string[] sUser, string[] sKey) {
            this.Upd_OshiraseAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Upd_OshiraseAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Upd_OshiraseOperationCompleted == null)) {
                this.Upd_OshiraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpd_OshiraseOperationCompleted);
            }
            this.InvokeAsync("Upd_Oshirase", new object[] {
                        sUser,
                        sKey}, this.Upd_OshiraseOperationCompleted, userState);
        }
        
        private void OnUpd_OshiraseOperationCompleted(object arg) {
            if ((this.Upd_OshiraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upd_OshiraseCompleted(this, new Upd_OshiraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Del_Oshirase", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Del_Oshirase(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Del_Oshirase", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDel_Oshirase(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Del_Oshirase", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndDel_Oshirase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Del_OshiraseAsync(string[] sUser, string[] sKey) {
            this.Del_OshiraseAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Del_OshiraseAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Del_OshiraseOperationCompleted == null)) {
                this.Del_OshiraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDel_OshiraseOperationCompleted);
            }
            this.InvokeAsync("Del_Oshirase", new object[] {
                        sUser,
                        sKey}, this.Del_OshiraseOperationCompleted, userState);
        }
        
        private void OnDel_OshiraseOperationCompleted(object arg) {
            if ((this.Del_OshiraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Del_OshiraseCompleted(this, new Del_OshiraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Upd_HyoujiFG", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Upd_HyoujiFG(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Upd_HyoujiFG", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpd_HyoujiFG(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Upd_HyoujiFG", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndUpd_HyoujiFG(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Upd_HyoujiFGAsync(string[] sUser, string[] sKey) {
            this.Upd_HyoujiFGAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Upd_HyoujiFGAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Upd_HyoujiFGOperationCompleted == null)) {
                this.Upd_HyoujiFGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpd_HyoujiFGOperationCompleted);
            }
            this.InvokeAsync("Upd_HyoujiFG", new object[] {
                        sUser,
                        sKey}, this.Upd_HyoujiFGOperationCompleted, userState);
        }
        
        private void OnUpd_HyoujiFGOperationCompleted(object arg) {
            if ((this.Upd_HyoujiFGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upd_HyoujiFGCompleted(this, new Upd_HyoujiFGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB() {
            object[] results = this.Invoke("wakeupDB", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDBAsync() {
            this.wakeupDBAsync(null);
        }
        
        /// <remarks/>
        public void wakeupDBAsync(object userState) {
            if ((this.wakeupDBOperationCompleted == null)) {
                this.wakeupDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDBOperationCompleted);
            }
            this.InvokeAsync("wakeupDB", new object[0], this.wakeupDBOperationCompleted, userState);
        }
        
        private void OnwakeupDBOperationCompleted(object arg) {
            if ((this.wakeupDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDBCompleted(this, new wakeupDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB2(int iConCnt) {
            object[] results = this.Invoke("wakeupDB2", new object[] {
                        iConCnt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB2(int iConCnt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB2", new object[] {
                        iConCnt}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt) {
            this.wakeupDB2Async(iConCnt, null);
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt, object userState) {
            if ((this.wakeupDB2OperationCompleted == null)) {
                this.wakeupDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDB2OperationCompleted);
            }
            this.InvokeAsync("wakeupDB2", new object[] {
                        iConCnt}, this.wakeupDB2OperationCompleted, userState);
        }
        
        private void OnwakeupDB2OperationCompleted(object arg) {
            if ((this.wakeupDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDB2Completed(this, new wakeupDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_MessageCompletedEventHandler(object sender, Get_MessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_MessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_MessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_OshiraseTopNCompletedEventHandler(object sender, Get_OshiraseTopNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OshiraseTopNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OshiraseTopNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Sel_OshiraseCompletedEventHandler(object sender, Sel_OshiraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sel_OshiraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sel_OshiraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Ins_OshiraseCompletedEventHandler(object sender, Ins_OshiraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ins_OshiraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Ins_OshiraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Upd_OshiraseCompletedEventHandler(object sender, Upd_OshiraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upd_OshiraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upd_OshiraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Del_OshiraseCompletedEventHandler(object sender, Del_OshiraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Del_OshiraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Del_OshiraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Upd_HyoujiFGCompletedEventHandler(object sender, Upd_HyoujiFGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upd_HyoujiFGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upd_HyoujiFGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDBCompletedEventHandler(object sender, wakeupDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDB2CompletedEventHandler(object sender, wakeupDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591