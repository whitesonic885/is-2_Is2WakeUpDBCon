//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2443
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 1.1.4322.2443 によって自動生成されました。
// 
namespace is2WakeUpDBCon.is2otodoke {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://Walkthrough/XmlWebServices/")]
    public class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://localhost/is2/is2otodoke/Service1.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_todokesaki", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_todokesaki(string[] sUser, string sKCode, string sBCode, string sKana, string sTCode) {
            object[] results = this.Invoke("Get_todokesaki", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_todokesaki(string[] sUser, string sKCode, string sBCode, string sKana, string sTCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_todokesaki", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_todokesaki(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_Stodokesaki", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_Stodokesaki(string[] sUser, string sKCode, string sBCode, string sTCode) {
            object[] results = this.Invoke("Get_Stodokesaki", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sTCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_Stodokesaki(string[] sUser, string sKCode, string sBCode, string sTCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_Stodokesaki", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sTCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_Stodokesaki(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Upd_todokesaki", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Upd_todokesaki(string[] sUser, string[] sData) {
            object[] results = this.Invoke("Upd_todokesaki", new object[] {
                        sUser,
                        sData});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpd_todokesaki(string[] sUser, string[] sData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Upd_todokesaki", new object[] {
                        sUser,
                        sData}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndUpd_todokesaki(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Ins_todokesaki", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Ins_todokesaki(string[] sUser, string[] sData) {
            object[] results = this.Invoke("Ins_todokesaki", new object[] {
                        sUser,
                        sData});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIns_todokesaki(string[] sUser, string[] sData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ins_todokesaki", new object[] {
                        sUser,
                        sData}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndIns_todokesaki(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Del_todokesaki", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Del_todokesaki(string[] sUser, string[] sData) {
            object[] results = this.Invoke("Del_todokesaki", new object[] {
                        sUser,
                        sData});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDel_todokesaki(string[] sUser, string[] sData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Del_todokesaki", new object[] {
                        sUser,
                        sData}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndDel_todokesaki(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Del_todokesaki2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Del_todokesaki2(string[] sUser, string sKCode, string sBCode, string sTCode) {
            object[] results = this.Invoke("Del_todokesaki2", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sTCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDel_todokesaki2(string[] sUser, string sKCode, string sBCode, string sTCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Del_todokesaki2", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sTCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndDel_todokesaki2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Del_todokesaki3", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Del_todokesaki3(string[] sUser, string[] sData) {
            object[] results = this.Invoke("Del_todokesaki3", new object[] {
                        sUser,
                        sData});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDel_todokesaki3(string[] sUser, string[] sData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Del_todokesaki3", new object[] {
                        sUser,
                        sData}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndDel_todokesaki3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Ins_uploadData", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Ins_uploadData(string[] sUser, string[] sList) {
            object[] results = this.Invoke("Ins_uploadData", new object[] {
                        sUser,
                        sList});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIns_uploadData(string[] sUser, string[] sList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ins_uploadData", new object[] {
                        sUser,
                        sList}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndIns_uploadData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_csvwrite", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_csvwrite(string[] sUser, string sKCode, string sBCode) {
            object[] results = this.Invoke("Get_csvwrite", new object[] {
                        sUser,
                        sKCode,
                        sBCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_csvwrite(string[] sUser, string sKCode, string sBCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_csvwrite", new object[] {
                        sUser,
                        sKCode,
                        sBCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_csvwrite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_ninushiCount", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_ninushiCount(string[] sUser, string sKCode, string sBCode) {
            object[] results = this.Invoke("Get_ninushiCount", new object[] {
                        sUser,
                        sKCode,
                        sBCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_ninushiCount(string[] sUser, string sKCode, string sBCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_ninushiCount", new object[] {
                        sUser,
                        sKCode,
                        sBCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_ninushiCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_csvwrite2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_csvwrite2(string[] sUser, string sKCode, string sBCode, string sKana, string sTCode, string sTelNo, string sTelNo2, string sTelNo3, string sName, int iSortLabel1, int iSortPat1, int iSortLabel2, int iSortPat2) {
            object[] results = this.Invoke("Get_csvwrite2", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode,
                        sTelNo,
                        sTelNo2,
                        sTelNo3,
                        sName,
                        iSortLabel1,
                        iSortPat1,
                        iSortLabel2,
                        iSortPat2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_csvwrite2(string[] sUser, string sKCode, string sBCode, string sKana, string sTCode, string sTelNo, string sTelNo2, string sTelNo3, string sName, int iSortLabel1, int iSortPat1, int iSortLabel2, int iSortPat2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_csvwrite2", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode,
                        sTelNo,
                        sTelNo2,
                        sTelNo3,
                        sName,
                        iSortLabel1,
                        iSortPat1,
                        iSortLabel2,
                        iSortPat2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_csvwrite2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_todokesaki2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_todokesaki2(string[] sUser, string sKCode, string sBCode, string sKana, string sTCode, string sTelNo, string sTelNo2, string sTelNo3, string sName, int iSortLabel1, int iSortPat1, int iSortLabel2, int iSortPat2) {
            object[] results = this.Invoke("Get_todokesaki2", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode,
                        sTelNo,
                        sTelNo2,
                        sTelNo3,
                        sName,
                        iSortLabel1,
                        iSortPat1,
                        iSortLabel2,
                        iSortPat2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_todokesaki2(string[] sUser, string sKCode, string sBCode, string sKana, string sTCode, string sTelNo, string sTelNo2, string sTelNo3, string sName, int iSortLabel1, int iSortPat1, int iSortLabel2, int iSortPat2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_todokesaki2", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode,
                        sTelNo,
                        sTelNo2,
                        sTelNo3,
                        sName,
                        iSortLabel1,
                        iSortPat1,
                        iSortLabel2,
                        iSortPat2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_todokesaki2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_todokesaki3", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_todokesaki3(string[] sUser, string sKCode, string sBCode, string sKana, string sTCode, string sTelNo, string sTelNo2, string sTelNo3, string sName, int iSortLabel1, int iSortPat1, int iSortLabel2, int iSortPat2, bool bMultiLine) {
            object[] results = this.Invoke("Get_todokesaki3", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode,
                        sTelNo,
                        sTelNo2,
                        sTelNo3,
                        sName,
                        iSortLabel1,
                        iSortPat1,
                        iSortLabel2,
                        iSortPat2,
                        bMultiLine});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_todokesaki3(
                    string[] sUser, 
                    string sKCode, 
                    string sBCode, 
                    string sKana, 
                    string sTCode, 
                    string sTelNo, 
                    string sTelNo2, 
                    string sTelNo3, 
                    string sName, 
                    int iSortLabel1, 
                    int iSortPat1, 
                    int iSortLabel2, 
                    int iSortPat2, 
                    bool bMultiLine, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("Get_todokesaki3", new object[] {
                        sUser,
                        sKCode,
                        sBCode,
                        sKana,
                        sTCode,
                        sTelNo,
                        sTelNo2,
                        sTelNo3,
                        sName,
                        iSortLabel1,
                        iSortPat1,
                        iSortLabel2,
                        iSortPat2,
                        bMultiLine}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_todokesaki3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Check_TensyoCode", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Check_TensyoCode(string[] sUser, string sTensyoCode) {
            object[] results = this.Invoke("Check_TensyoCode", new object[] {
                        sUser,
                        sTensyoCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheck_TensyoCode(string[] sUser, string sTensyoCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Check_TensyoCode", new object[] {
                        sUser,
                        sTensyoCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndCheck_TensyoCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB() {
            object[] results = this.Invoke("wakeupDB", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB2(int iConCnt) {
            object[] results = this.Invoke("wakeupDB2", new object[] {
                        iConCnt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB2(int iConCnt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB2", new object[] {
                        iConCnt}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
