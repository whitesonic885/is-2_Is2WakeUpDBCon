//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
// 
#pragma warning disable 1591

namespace is2WakeUpDBCon.is2address {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://Walkthrough/XmlWebServices/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Get_byKenOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_byKenShiOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_byPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_byPostcode2OperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDB2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://wwwis2.fukutsu.co.jp/is2/is2address/Service1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Get_byKenCompletedEventHandler Get_byKenCompleted;
        
        /// <remarks/>
        public event Get_byKenShiCompletedEventHandler Get_byKenShiCompleted;
        
        /// <remarks/>
        public event Get_byPostcodeCompletedEventHandler Get_byPostcodeCompleted;
        
        /// <remarks/>
        public event Get_byPostcode2CompletedEventHandler Get_byPostcode2Completed;
        
        /// <remarks/>
        public event wakeupDBCompletedEventHandler wakeupDBCompleted;
        
        /// <remarks/>
        public event wakeupDB2CompletedEventHandler wakeupDB2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_byKen", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_byKen(string[] sUser, string s都道府県ＣＤ) {
            object[] results = this.Invoke("Get_byKen", new object[] {
                        sUser,
                        s都道府県ＣＤ});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_byKen(string[] sUser, string s都道府県ＣＤ, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_byKen", new object[] {
                        sUser,
                        s都道府県ＣＤ}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_byKen(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_byKenAsync(string[] sUser, string s都道府県ＣＤ) {
            this.Get_byKenAsync(sUser, s都道府県ＣＤ, null);
        }
        
        /// <remarks/>
        public void Get_byKenAsync(string[] sUser, string s都道府県ＣＤ, object userState) {
            if ((this.Get_byKenOperationCompleted == null)) {
                this.Get_byKenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_byKenOperationCompleted);
            }
            this.InvokeAsync("Get_byKen", new object[] {
                        sUser,
                        s都道府県ＣＤ}, this.Get_byKenOperationCompleted, userState);
        }
        
        private void OnGet_byKenOperationCompleted(object arg) {
            if ((this.Get_byKenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_byKenCompleted(this, new Get_byKenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_byKenShi", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_byKenShi(string[] sUser, string s都道府県ＣＤ, string s市区町村ＣＤ) {
            object[] results = this.Invoke("Get_byKenShi", new object[] {
                        sUser,
                        s都道府県ＣＤ,
                        s市区町村ＣＤ});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_byKenShi(string[] sUser, string s都道府県ＣＤ, string s市区町村ＣＤ, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_byKenShi", new object[] {
                        sUser,
                        s都道府県ＣＤ,
                        s市区町村ＣＤ}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_byKenShi(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_byKenShiAsync(string[] sUser, string s都道府県ＣＤ, string s市区町村ＣＤ) {
            this.Get_byKenShiAsync(sUser, s都道府県ＣＤ, s市区町村ＣＤ, null);
        }
        
        /// <remarks/>
        public void Get_byKenShiAsync(string[] sUser, string s都道府県ＣＤ, string s市区町村ＣＤ, object userState) {
            if ((this.Get_byKenShiOperationCompleted == null)) {
                this.Get_byKenShiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_byKenShiOperationCompleted);
            }
            this.InvokeAsync("Get_byKenShi", new object[] {
                        sUser,
                        s都道府県ＣＤ,
                        s市区町村ＣＤ}, this.Get_byKenShiOperationCompleted, userState);
        }
        
        private void OnGet_byKenShiOperationCompleted(object arg) {
            if ((this.Get_byKenShiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_byKenShiCompleted(this, new Get_byKenShiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_byPostcode", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_byPostcode(string[] sUser, string s郵便番号) {
            object[] results = this.Invoke("Get_byPostcode", new object[] {
                        sUser,
                        s郵便番号});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_byPostcode(string[] sUser, string s郵便番号, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_byPostcode", new object[] {
                        sUser,
                        s郵便番号}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_byPostcode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_byPostcodeAsync(string[] sUser, string s郵便番号) {
            this.Get_byPostcodeAsync(sUser, s郵便番号, null);
        }
        
        /// <remarks/>
        public void Get_byPostcodeAsync(string[] sUser, string s郵便番号, object userState) {
            if ((this.Get_byPostcodeOperationCompleted == null)) {
                this.Get_byPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_byPostcodeOperationCompleted);
            }
            this.InvokeAsync("Get_byPostcode", new object[] {
                        sUser,
                        s郵便番号}, this.Get_byPostcodeOperationCompleted, userState);
        }
        
        private void OnGet_byPostcodeOperationCompleted(object arg) {
            if ((this.Get_byPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_byPostcodeCompleted(this, new Get_byPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_byPostcode2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_byPostcode2(string[] sUser, string s郵便番号) {
            object[] results = this.Invoke("Get_byPostcode2", new object[] {
                        sUser,
                        s郵便番号});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_byPostcode2(string[] sUser, string s郵便番号, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_byPostcode2", new object[] {
                        sUser,
                        s郵便番号}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_byPostcode2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_byPostcode2Async(string[] sUser, string s郵便番号) {
            this.Get_byPostcode2Async(sUser, s郵便番号, null);
        }
        
        /// <remarks/>
        public void Get_byPostcode2Async(string[] sUser, string s郵便番号, object userState) {
            if ((this.Get_byPostcode2OperationCompleted == null)) {
                this.Get_byPostcode2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_byPostcode2OperationCompleted);
            }
            this.InvokeAsync("Get_byPostcode2", new object[] {
                        sUser,
                        s郵便番号}, this.Get_byPostcode2OperationCompleted, userState);
        }
        
        private void OnGet_byPostcode2OperationCompleted(object arg) {
            if ((this.Get_byPostcode2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_byPostcode2Completed(this, new Get_byPostcode2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB() {
            object[] results = this.Invoke("wakeupDB", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDBAsync() {
            this.wakeupDBAsync(null);
        }
        
        /// <remarks/>
        public void wakeupDBAsync(object userState) {
            if ((this.wakeupDBOperationCompleted == null)) {
                this.wakeupDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDBOperationCompleted);
            }
            this.InvokeAsync("wakeupDB", new object[0], this.wakeupDBOperationCompleted, userState);
        }
        
        private void OnwakeupDBOperationCompleted(object arg) {
            if ((this.wakeupDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDBCompleted(this, new wakeupDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB2(int iConCnt) {
            object[] results = this.Invoke("wakeupDB2", new object[] {
                        iConCnt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB2(int iConCnt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB2", new object[] {
                        iConCnt}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt) {
            this.wakeupDB2Async(iConCnt, null);
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt, object userState) {
            if ((this.wakeupDB2OperationCompleted == null)) {
                this.wakeupDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDB2OperationCompleted);
            }
            this.InvokeAsync("wakeupDB2", new object[] {
                        iConCnt}, this.wakeupDB2OperationCompleted, userState);
        }
        
        private void OnwakeupDB2OperationCompleted(object arg) {
            if ((this.wakeupDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDB2Completed(this, new wakeupDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_byKenCompletedEventHandler(object sender, Get_byKenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_byKenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_byKenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_byKenShiCompletedEventHandler(object sender, Get_byKenShiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_byKenShiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_byKenShiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_byPostcodeCompletedEventHandler(object sender, Get_byPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_byPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_byPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_byPostcode2CompletedEventHandler(object sender, Get_byPostcode2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_byPostcode2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_byPostcode2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDBCompletedEventHandler(object sender, wakeupDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDB2CompletedEventHandler(object sender, wakeupDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591