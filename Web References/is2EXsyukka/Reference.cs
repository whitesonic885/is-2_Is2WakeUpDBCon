//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
// 
#pragma warning disable 1591

namespace is2WakeUpDBCon.is2EXsyukka {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://Walkthrough/XmlWebServices/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Ins_EX_syukkaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_St01StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDB2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://wwwis2.fukutsu.co.jp/is2ex/is2EXsyukka/Service1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Ins_EX_syukkaCompletedEventHandler Ins_EX_syukkaCompleted;
        
        /// <remarks/>
        public event Get_St01StatusCompletedEventHandler Get_St01StatusCompleted;
        
        /// <remarks/>
        public event wakeupDBCompletedEventHandler wakeupDBCompleted;
        
        /// <remarks/>
        public event wakeupDB2CompletedEventHandler wakeupDB2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Ins_EX_syukka", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Ins_EX_syukka(string[] sUser, string[] sData) {
            object[] results = this.Invoke("Ins_EX_syukka", new object[] {
                        sUser,
                        sData});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIns_EX_syukka(string[] sUser, string[] sData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ins_EX_syukka", new object[] {
                        sUser,
                        sData}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndIns_EX_syukka(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Ins_EX_syukkaAsync(string[] sUser, string[] sData) {
            this.Ins_EX_syukkaAsync(sUser, sData, null);
        }
        
        /// <remarks/>
        public void Ins_EX_syukkaAsync(string[] sUser, string[] sData, object userState) {
            if ((this.Ins_EX_syukkaOperationCompleted == null)) {
                this.Ins_EX_syukkaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIns_EX_syukkaOperationCompleted);
            }
            this.InvokeAsync("Ins_EX_syukka", new object[] {
                        sUser,
                        sData}, this.Ins_EX_syukkaOperationCompleted, userState);
        }
        
        private void OnIns_EX_syukkaOperationCompleted(object arg) {
            if ((this.Ins_EX_syukkaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ins_EX_syukkaCompleted(this, new Ins_EX_syukkaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_St01Status", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_St01Status(string[] sUser, string[] sKaiinCD, string sUpdDateTime) {
            object[] results = this.Invoke("Get_St01Status", new object[] {
                        sUser,
                        sKaiinCD,
                        sUpdDateTime});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_St01Status(string[] sUser, string[] sKaiinCD, string sUpdDateTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_St01Status", new object[] {
                        sUser,
                        sKaiinCD,
                        sUpdDateTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_St01Status(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_St01StatusAsync(string[] sUser, string[] sKaiinCD, string sUpdDateTime) {
            this.Get_St01StatusAsync(sUser, sKaiinCD, sUpdDateTime, null);
        }
        
        /// <remarks/>
        public void Get_St01StatusAsync(string[] sUser, string[] sKaiinCD, string sUpdDateTime, object userState) {
            if ((this.Get_St01StatusOperationCompleted == null)) {
                this.Get_St01StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_St01StatusOperationCompleted);
            }
            this.InvokeAsync("Get_St01Status", new object[] {
                        sUser,
                        sKaiinCD,
                        sUpdDateTime}, this.Get_St01StatusOperationCompleted, userState);
        }
        
        private void OnGet_St01StatusOperationCompleted(object arg) {
            if ((this.Get_St01StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_St01StatusCompleted(this, new Get_St01StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB() {
            object[] results = this.Invoke("wakeupDB", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDBAsync() {
            this.wakeupDBAsync(null);
        }
        
        /// <remarks/>
        public void wakeupDBAsync(object userState) {
            if ((this.wakeupDBOperationCompleted == null)) {
                this.wakeupDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDBOperationCompleted);
            }
            this.InvokeAsync("wakeupDB", new object[0], this.wakeupDBOperationCompleted, userState);
        }
        
        private void OnwakeupDBOperationCompleted(object arg) {
            if ((this.wakeupDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDBCompleted(this, new wakeupDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB2(int iConCnt) {
            object[] results = this.Invoke("wakeupDB2", new object[] {
                        iConCnt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB2(int iConCnt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB2", new object[] {
                        iConCnt}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt) {
            this.wakeupDB2Async(iConCnt, null);
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt, object userState) {
            if ((this.wakeupDB2OperationCompleted == null)) {
                this.wakeupDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDB2OperationCompleted);
            }
            this.InvokeAsync("wakeupDB2", new object[] {
                        iConCnt}, this.wakeupDB2OperationCompleted, userState);
        }
        
        private void OnwakeupDB2OperationCompleted(object arg) {
            if ((this.wakeupDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDB2Completed(this, new wakeupDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Ins_EX_syukkaCompletedEventHandler(object sender, Ins_EX_syukkaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ins_EX_syukkaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Ins_EX_syukkaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_St01StatusCompletedEventHandler(object sender, Get_St01StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_St01StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_St01StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDBCompletedEventHandler(object sender, wakeupDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDB2CompletedEventHandler(object sender, wakeupDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591