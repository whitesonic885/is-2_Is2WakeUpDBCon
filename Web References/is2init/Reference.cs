//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
// 
#pragma warning disable 1591

namespace is2WakeUpDBCon.is2init {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://Walkthrough/XmlWebServices/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Set_tanmatsuOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upd_tanmatsuOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upd_riyouOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_tanmatsu2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_tanmatsu3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_riyouOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_seikyuOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_jyotaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_syukabiOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_bumonOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_messageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_seigyoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_seigyo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_seigyo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Ins_seigyoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upd_seigyoOperationCompleted;
        
        private System.Threading.SendOrPostCallback login2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Upd_tanmatuOperationCompleted;
        
        private System.Threading.SendOrPostCallback login3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_hatuten3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_KadobiOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_bumon2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_seigyo4OperationCompleted;
        
        private System.Threading.SendOrPostCallback Sel_SectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback wakeupDB2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://wwwis2.fukutsu.co.jp/is2/is2init/Service1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Set_tanmatsuCompletedEventHandler Set_tanmatsuCompleted;
        
        /// <remarks/>
        public event Upd_tanmatsuCompletedEventHandler Upd_tanmatsuCompleted;
        
        /// <remarks/>
        public event Upd_riyouCompletedEventHandler Upd_riyouCompleted;
        
        /// <remarks/>
        public event Get_tanmatsu2CompletedEventHandler Get_tanmatsu2Completed;
        
        /// <remarks/>
        public event Get_tanmatsu3CompletedEventHandler Get_tanmatsu3Completed;
        
        /// <remarks/>
        public event Get_riyouCompletedEventHandler Get_riyouCompleted;
        
        /// <remarks/>
        public event Get_seikyuCompletedEventHandler Get_seikyuCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event Get_jyotaiCompletedEventHandler Get_jyotaiCompleted;
        
        /// <remarks/>
        public event Get_syukabiCompletedEventHandler Get_syukabiCompleted;
        
        /// <remarks/>
        public event Get_bumonCompletedEventHandler Get_bumonCompleted;
        
        /// <remarks/>
        public event Get_messageCompletedEventHandler Get_messageCompleted;
        
        /// <remarks/>
        public event Get_seigyoCompletedEventHandler Get_seigyoCompleted;
        
        /// <remarks/>
        public event Get_seigyo2CompletedEventHandler Get_seigyo2Completed;
        
        /// <remarks/>
        public event Get_seigyo3CompletedEventHandler Get_seigyo3Completed;
        
        /// <remarks/>
        public event Ins_seigyoCompletedEventHandler Ins_seigyoCompleted;
        
        /// <remarks/>
        public event Upd_seigyoCompletedEventHandler Upd_seigyoCompleted;
        
        /// <remarks/>
        public event login2CompletedEventHandler login2Completed;
        
        /// <remarks/>
        public event Upd_tanmatuCompletedEventHandler Upd_tanmatuCompleted;
        
        /// <remarks/>
        public event login3CompletedEventHandler login3Completed;
        
        /// <remarks/>
        public event Get_hatuten3CompletedEventHandler Get_hatuten3Completed;
        
        /// <remarks/>
        public event Get_KadobiCompletedEventHandler Get_KadobiCompleted;
        
        /// <remarks/>
        public event Get_bumon2CompletedEventHandler Get_bumon2Completed;
        
        /// <remarks/>
        public event Get_seigyo4CompletedEventHandler Get_seigyo4Completed;
        
        /// <remarks/>
        public event Sel_SectionCompletedEventHandler Sel_SectionCompleted;
        
        /// <remarks/>
        public event wakeupDBCompletedEventHandler wakeupDBCompleted;
        
        /// <remarks/>
        public event wakeupDB2CompletedEventHandler wakeupDB2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Set_tanmatsu", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Set_tanmatsu(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Set_tanmatsu", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSet_tanmatsu(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Set_tanmatsu", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndSet_tanmatsu(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Set_tanmatsuAsync(string[] sUser, string[] sKey) {
            this.Set_tanmatsuAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Set_tanmatsuAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Set_tanmatsuOperationCompleted == null)) {
                this.Set_tanmatsuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_tanmatsuOperationCompleted);
            }
            this.InvokeAsync("Set_tanmatsu", new object[] {
                        sUser,
                        sKey}, this.Set_tanmatsuOperationCompleted, userState);
        }
        
        private void OnSet_tanmatsuOperationCompleted(object arg) {
            if ((this.Set_tanmatsuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_tanmatsuCompleted(this, new Set_tanmatsuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Upd_tanmatsu", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Upd_tanmatsu(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Upd_tanmatsu", new object[] {
                        sUser,
                        sKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpd_tanmatsu(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Upd_tanmatsu", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpd_tanmatsu(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Upd_tanmatsuAsync(string[] sUser, string[] sKey) {
            this.Upd_tanmatsuAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Upd_tanmatsuAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Upd_tanmatsuOperationCompleted == null)) {
                this.Upd_tanmatsuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpd_tanmatsuOperationCompleted);
            }
            this.InvokeAsync("Upd_tanmatsu", new object[] {
                        sUser,
                        sKey}, this.Upd_tanmatsuOperationCompleted, userState);
        }
        
        private void OnUpd_tanmatsuOperationCompleted(object arg) {
            if ((this.Upd_tanmatsuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upd_tanmatsuCompleted(this, new Upd_tanmatsuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Upd_riyou", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Upd_riyou(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Upd_riyou", new object[] {
                        sUser,
                        sKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpd_riyou(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Upd_riyou", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpd_riyou(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Upd_riyouAsync(string[] sUser, string[] sKey) {
            this.Upd_riyouAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Upd_riyouAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Upd_riyouOperationCompleted == null)) {
                this.Upd_riyouOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpd_riyouOperationCompleted);
            }
            this.InvokeAsync("Upd_riyou", new object[] {
                        sUser,
                        sKey}, this.Upd_riyouOperationCompleted, userState);
        }
        
        private void OnUpd_riyouOperationCompleted(object arg) {
            if ((this.Upd_riyouCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upd_riyouCompleted(this, new Upd_riyouCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_tanmatsu2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_tanmatsu2(string[] sUser, string sKey1) {
            object[] results = this.Invoke("Get_tanmatsu2", new object[] {
                        sUser,
                        sKey1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_tanmatsu2(string[] sUser, string sKey1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_tanmatsu2", new object[] {
                        sUser,
                        sKey1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_tanmatsu2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_tanmatsu2Async(string[] sUser, string sKey1) {
            this.Get_tanmatsu2Async(sUser, sKey1, null);
        }
        
        /// <remarks/>
        public void Get_tanmatsu2Async(string[] sUser, string sKey1, object userState) {
            if ((this.Get_tanmatsu2OperationCompleted == null)) {
                this.Get_tanmatsu2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_tanmatsu2OperationCompleted);
            }
            this.InvokeAsync("Get_tanmatsu2", new object[] {
                        sUser,
                        sKey1}, this.Get_tanmatsu2OperationCompleted, userState);
        }
        
        private void OnGet_tanmatsu2OperationCompleted(object arg) {
            if ((this.Get_tanmatsu2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_tanmatsu2Completed(this, new Get_tanmatsu2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_tanmatsu3", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_tanmatsu3(string[] sUser, string[] sKey1) {
            object[] results = this.Invoke("Get_tanmatsu3", new object[] {
                        sUser,
                        sKey1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_tanmatsu3(string[] sUser, string[] sKey1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_tanmatsu3", new object[] {
                        sUser,
                        sKey1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_tanmatsu3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_tanmatsu3Async(string[] sUser, string[] sKey1) {
            this.Get_tanmatsu3Async(sUser, sKey1, null);
        }
        
        /// <remarks/>
        public void Get_tanmatsu3Async(string[] sUser, string[] sKey1, object userState) {
            if ((this.Get_tanmatsu3OperationCompleted == null)) {
                this.Get_tanmatsu3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_tanmatsu3OperationCompleted);
            }
            this.InvokeAsync("Get_tanmatsu3", new object[] {
                        sUser,
                        sKey1}, this.Get_tanmatsu3OperationCompleted, userState);
        }
        
        private void OnGet_tanmatsu3OperationCompleted(object arg) {
            if ((this.Get_tanmatsu3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_tanmatsu3Completed(this, new Get_tanmatsu3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_riyou", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_riyou(string[] sUser, string sKey1, string sKey2) {
            object[] results = this.Invoke("Get_riyou", new object[] {
                        sUser,
                        sKey1,
                        sKey2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_riyou(string[] sUser, string sKey1, string sKey2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_riyou", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_riyou(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_riyouAsync(string[] sUser, string sKey1, string sKey2) {
            this.Get_riyouAsync(sUser, sKey1, sKey2, null);
        }
        
        /// <remarks/>
        public void Get_riyouAsync(string[] sUser, string sKey1, string sKey2, object userState) {
            if ((this.Get_riyouOperationCompleted == null)) {
                this.Get_riyouOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_riyouOperationCompleted);
            }
            this.InvokeAsync("Get_riyou", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, this.Get_riyouOperationCompleted, userState);
        }
        
        private void OnGet_riyouOperationCompleted(object arg) {
            if ((this.Get_riyouCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_riyouCompleted(this, new Get_riyouCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_seikyu", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_seikyu(string[] sUser, string sKey1, string sKey2) {
            object[] results = this.Invoke("Get_seikyu", new object[] {
                        sUser,
                        sKey1,
                        sKey2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_seikyu(string[] sUser, string sKey1, string sKey2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_seikyu", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_seikyu(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_seikyuAsync(string[] sUser, string sKey1, string sKey2) {
            this.Get_seikyuAsync(sUser, sKey1, sKey2, null);
        }
        
        /// <remarks/>
        public void Get_seikyuAsync(string[] sUser, string sKey1, string sKey2, object userState) {
            if ((this.Get_seikyuOperationCompleted == null)) {
                this.Get_seikyuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_seikyuOperationCompleted);
            }
            this.InvokeAsync("Get_seikyu", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, this.Get_seikyuOperationCompleted, userState);
        }
        
        private void OnGet_seikyuOperationCompleted(object arg) {
            if ((this.Get_seikyuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_seikyuCompleted(this, new Get_seikyuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/login", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] login(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("login", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] Endlogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string[] sUser, string[] sKey) {
            this.loginAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void loginAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        sUser,
                        sKey}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_jyotai", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_jyotai(string[] sUser) {
            object[] results = this.Invoke("Get_jyotai", new object[] {
                        sUser});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_jyotai(string[] sUser, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_jyotai", new object[] {
                        sUser}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_jyotai(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_jyotaiAsync(string[] sUser) {
            this.Get_jyotaiAsync(sUser, null);
        }
        
        /// <remarks/>
        public void Get_jyotaiAsync(string[] sUser, object userState) {
            if ((this.Get_jyotaiOperationCompleted == null)) {
                this.Get_jyotaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_jyotaiOperationCompleted);
            }
            this.InvokeAsync("Get_jyotai", new object[] {
                        sUser}, this.Get_jyotaiOperationCompleted, userState);
        }
        
        private void OnGet_jyotaiOperationCompleted(object arg) {
            if ((this.Get_jyotaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_jyotaiCompleted(this, new Get_jyotaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_syukabi", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_syukabi(string[] sUser, string sKey1, string sKey2) {
            object[] results = this.Invoke("Get_syukabi", new object[] {
                        sUser,
                        sKey1,
                        sKey2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_syukabi(string[] sUser, string sKey1, string sKey2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_syukabi", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_syukabi(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_syukabiAsync(string[] sUser, string sKey1, string sKey2) {
            this.Get_syukabiAsync(sUser, sKey1, sKey2, null);
        }
        
        /// <remarks/>
        public void Get_syukabiAsync(string[] sUser, string sKey1, string sKey2, object userState) {
            if ((this.Get_syukabiOperationCompleted == null)) {
                this.Get_syukabiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_syukabiOperationCompleted);
            }
            this.InvokeAsync("Get_syukabi", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, this.Get_syukabiOperationCompleted, userState);
        }
        
        private void OnGet_syukabiOperationCompleted(object arg) {
            if ((this.Get_syukabiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_syukabiCompleted(this, new Get_syukabiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_bumon", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_bumon(string[] sUser, string sKey1) {
            object[] results = this.Invoke("Get_bumon", new object[] {
                        sUser,
                        sKey1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_bumon(string[] sUser, string sKey1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_bumon", new object[] {
                        sUser,
                        sKey1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_bumon(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_bumonAsync(string[] sUser, string sKey1) {
            this.Get_bumonAsync(sUser, sKey1, null);
        }
        
        /// <remarks/>
        public void Get_bumonAsync(string[] sUser, string sKey1, object userState) {
            if ((this.Get_bumonOperationCompleted == null)) {
                this.Get_bumonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_bumonOperationCompleted);
            }
            this.InvokeAsync("Get_bumon", new object[] {
                        sUser,
                        sKey1}, this.Get_bumonOperationCompleted, userState);
        }
        
        private void OnGet_bumonOperationCompleted(object arg) {
            if ((this.Get_bumonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_bumonCompleted(this, new Get_bumonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_message", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_message(string[] sUser, string sKey1, string sKey2) {
            object[] results = this.Invoke("Get_message", new object[] {
                        sUser,
                        sKey1,
                        sKey2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_message(string[] sUser, string sKey1, string sKey2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_message", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_message(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_messageAsync(string[] sUser, string sKey1, string sKey2) {
            this.Get_messageAsync(sUser, sKey1, sKey2, null);
        }
        
        /// <remarks/>
        public void Get_messageAsync(string[] sUser, string sKey1, string sKey2, object userState) {
            if ((this.Get_messageOperationCompleted == null)) {
                this.Get_messageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_messageOperationCompleted);
            }
            this.InvokeAsync("Get_message", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, this.Get_messageOperationCompleted, userState);
        }
        
        private void OnGet_messageOperationCompleted(object arg) {
            if ((this.Get_messageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_messageCompleted(this, new Get_messageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_seigyo", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_seigyo(string[] sUser, string sKey1, string sKey2) {
            object[] results = this.Invoke("Get_seigyo", new object[] {
                        sUser,
                        sKey1,
                        sKey2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_seigyo(string[] sUser, string sKey1, string sKey2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_seigyo", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_seigyo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_seigyoAsync(string[] sUser, string sKey1, string sKey2) {
            this.Get_seigyoAsync(sUser, sKey1, sKey2, null);
        }
        
        /// <remarks/>
        public void Get_seigyoAsync(string[] sUser, string sKey1, string sKey2, object userState) {
            if ((this.Get_seigyoOperationCompleted == null)) {
                this.Get_seigyoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_seigyoOperationCompleted);
            }
            this.InvokeAsync("Get_seigyo", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, this.Get_seigyoOperationCompleted, userState);
        }
        
        private void OnGet_seigyoOperationCompleted(object arg) {
            if ((this.Get_seigyoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_seigyoCompleted(this, new Get_seigyoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_seigyo2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_seigyo2(string[] sUser, string sKey1, string sKey2, int iLength) {
            object[] results = this.Invoke("Get_seigyo2", new object[] {
                        sUser,
                        sKey1,
                        sKey2,
                        iLength});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_seigyo2(string[] sUser, string sKey1, string sKey2, int iLength, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_seigyo2", new object[] {
                        sUser,
                        sKey1,
                        sKey2,
                        iLength}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_seigyo2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_seigyo2Async(string[] sUser, string sKey1, string sKey2, int iLength) {
            this.Get_seigyo2Async(sUser, sKey1, sKey2, iLength, null);
        }
        
        /// <remarks/>
        public void Get_seigyo2Async(string[] sUser, string sKey1, string sKey2, int iLength, object userState) {
            if ((this.Get_seigyo2OperationCompleted == null)) {
                this.Get_seigyo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_seigyo2OperationCompleted);
            }
            this.InvokeAsync("Get_seigyo2", new object[] {
                        sUser,
                        sKey1,
                        sKey2,
                        iLength}, this.Get_seigyo2OperationCompleted, userState);
        }
        
        private void OnGet_seigyo2OperationCompleted(object arg) {
            if ((this.Get_seigyo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_seigyo2Completed(this, new Get_seigyo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_seigyo3", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_seigyo3(string[] sUser, string sKey1, string sKey2) {
            object[] results = this.Invoke("Get_seigyo3", new object[] {
                        sUser,
                        sKey1,
                        sKey2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_seigyo3(string[] sUser, string sKey1, string sKey2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_seigyo3", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_seigyo3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_seigyo3Async(string[] sUser, string sKey1, string sKey2) {
            this.Get_seigyo3Async(sUser, sKey1, sKey2, null);
        }
        
        /// <remarks/>
        public void Get_seigyo3Async(string[] sUser, string sKey1, string sKey2, object userState) {
            if ((this.Get_seigyo3OperationCompleted == null)) {
                this.Get_seigyo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_seigyo3OperationCompleted);
            }
            this.InvokeAsync("Get_seigyo3", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, this.Get_seigyo3OperationCompleted, userState);
        }
        
        private void OnGet_seigyo3OperationCompleted(object arg) {
            if ((this.Get_seigyo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_seigyo3Completed(this, new Get_seigyo3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Ins_seigyo", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ins_seigyo(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Ins_seigyo", new object[] {
                        sUser,
                        sKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIns_seigyo(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ins_seigyo", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndIns_seigyo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Ins_seigyoAsync(string[] sUser, string[] sKey) {
            this.Ins_seigyoAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Ins_seigyoAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Ins_seigyoOperationCompleted == null)) {
                this.Ins_seigyoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIns_seigyoOperationCompleted);
            }
            this.InvokeAsync("Ins_seigyo", new object[] {
                        sUser,
                        sKey}, this.Ins_seigyoOperationCompleted, userState);
        }
        
        private void OnIns_seigyoOperationCompleted(object arg) {
            if ((this.Ins_seigyoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ins_seigyoCompleted(this, new Ins_seigyoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Upd_seigyo", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Upd_seigyo(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Upd_seigyo", new object[] {
                        sUser,
                        sKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpd_seigyo(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Upd_seigyo", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpd_seigyo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Upd_seigyoAsync(string[] sUser, string[] sKey) {
            this.Upd_seigyoAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Upd_seigyoAsync(string[] sUser, string[] sKey, object userState) {
            if ((this.Upd_seigyoOperationCompleted == null)) {
                this.Upd_seigyoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpd_seigyoOperationCompleted);
            }
            this.InvokeAsync("Upd_seigyo", new object[] {
                        sUser,
                        sKey}, this.Upd_seigyoOperationCompleted, userState);
        }
        
        private void OnUpd_seigyoOperationCompleted(object arg) {
            if ((this.Upd_seigyoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upd_seigyoCompleted(this, new Upd_seigyoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/login2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] login2(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("login2", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin2(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login2", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] Endlogin2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void login2Async(string[] sUser, string[] sKey) {
            this.login2Async(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void login2Async(string[] sUser, string[] sKey, object userState) {
            if ((this.login2OperationCompleted == null)) {
                this.login2OperationCompleted = new System.Threading.SendOrPostCallback(this.Onlogin2OperationCompleted);
            }
            this.InvokeAsync("login2", new object[] {
                        sUser,
                        sKey}, this.login2OperationCompleted, userState);
        }
        
        private void Onlogin2OperationCompleted(object arg) {
            if ((this.login2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.login2Completed(this, new login2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Upd_tanmatu", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Upd_tanmatu(string[] sUser, string sKey) {
            object[] results = this.Invoke("Upd_tanmatu", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpd_tanmatu(string[] sUser, string sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Upd_tanmatu", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndUpd_tanmatu(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Upd_tanmatuAsync(string[] sUser, string sKey) {
            this.Upd_tanmatuAsync(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Upd_tanmatuAsync(string[] sUser, string sKey, object userState) {
            if ((this.Upd_tanmatuOperationCompleted == null)) {
                this.Upd_tanmatuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpd_tanmatuOperationCompleted);
            }
            this.InvokeAsync("Upd_tanmatu", new object[] {
                        sUser,
                        sKey}, this.Upd_tanmatuOperationCompleted, userState);
        }
        
        private void OnUpd_tanmatuOperationCompleted(object arg) {
            if ((this.Upd_tanmatuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upd_tanmatuCompleted(this, new Upd_tanmatuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/login3", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] login3(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("login3", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin3(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login3", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] Endlogin3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void login3Async(string[] sUser, string[] sKey) {
            this.login3Async(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void login3Async(string[] sUser, string[] sKey, object userState) {
            if ((this.login3OperationCompleted == null)) {
                this.login3OperationCompleted = new System.Threading.SendOrPostCallback(this.Onlogin3OperationCompleted);
            }
            this.InvokeAsync("login3", new object[] {
                        sUser,
                        sKey}, this.login3OperationCompleted, userState);
        }
        
        private void Onlogin3OperationCompleted(object arg) {
            if ((this.login3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.login3Completed(this, new login3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_hatuten3", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_hatuten3(string[] sUser, string sKcode, string sBcode) {
            object[] results = this.Invoke("Get_hatuten3", new object[] {
                        sUser,
                        sKcode,
                        sBcode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_hatuten3(string[] sUser, string sKcode, string sBcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_hatuten3", new object[] {
                        sUser,
                        sKcode,
                        sBcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_hatuten3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_hatuten3Async(string[] sUser, string sKcode, string sBcode) {
            this.Get_hatuten3Async(sUser, sKcode, sBcode, null);
        }
        
        /// <remarks/>
        public void Get_hatuten3Async(string[] sUser, string sKcode, string sBcode, object userState) {
            if ((this.Get_hatuten3OperationCompleted == null)) {
                this.Get_hatuten3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_hatuten3OperationCompleted);
            }
            this.InvokeAsync("Get_hatuten3", new object[] {
                        sUser,
                        sKcode,
                        sBcode}, this.Get_hatuten3OperationCompleted, userState);
        }
        
        private void OnGet_hatuten3OperationCompleted(object arg) {
            if ((this.Get_hatuten3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_hatuten3Completed(this, new Get_hatuten3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_Kadobi", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_Kadobi(string[] sUser, string sDateStart, string sDateEnd) {
            object[] results = this.Invoke("Get_Kadobi", new object[] {
                        sUser,
                        sDateStart,
                        sDateEnd});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_Kadobi(string[] sUser, string sDateStart, string sDateEnd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_Kadobi", new object[] {
                        sUser,
                        sDateStart,
                        sDateEnd}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_Kadobi(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_KadobiAsync(string[] sUser, string sDateStart, string sDateEnd) {
            this.Get_KadobiAsync(sUser, sDateStart, sDateEnd, null);
        }
        
        /// <remarks/>
        public void Get_KadobiAsync(string[] sUser, string sDateStart, string sDateEnd, object userState) {
            if ((this.Get_KadobiOperationCompleted == null)) {
                this.Get_KadobiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_KadobiOperationCompleted);
            }
            this.InvokeAsync("Get_Kadobi", new object[] {
                        sUser,
                        sDateStart,
                        sDateEnd}, this.Get_KadobiOperationCompleted, userState);
        }
        
        private void OnGet_KadobiOperationCompleted(object arg) {
            if ((this.Get_KadobiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_KadobiCompleted(this, new Get_KadobiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_bumon2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_bumon2(string[] sUser, string[] sKey) {
            object[] results = this.Invoke("Get_bumon2", new object[] {
                        sUser,
                        sKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_bumon2(string[] sUser, string[] sKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_bumon2", new object[] {
                        sUser,
                        sKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_bumon2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_bumon2Async(string[] sUser, string[] sKey) {
            this.Get_bumon2Async(sUser, sKey, null);
        }
        
        /// <remarks/>
        public void Get_bumon2Async(string[] sUser, string[] sKey, object userState) {
            if ((this.Get_bumon2OperationCompleted == null)) {
                this.Get_bumon2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_bumon2OperationCompleted);
            }
            this.InvokeAsync("Get_bumon2", new object[] {
                        sUser,
                        sKey}, this.Get_bumon2OperationCompleted, userState);
        }
        
        private void OnGet_bumon2OperationCompleted(object arg) {
            if ((this.Get_bumon2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_bumon2Completed(this, new Get_bumon2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Get_seigyo4", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Get_seigyo4(string[] sUser, string sKey1, string sKey2) {
            object[] results = this.Invoke("Get_seigyo4", new object[] {
                        sUser,
                        sKey1,
                        sKey2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_seigyo4(string[] sUser, string sKey1, string sKey2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_seigyo4", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGet_seigyo4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_seigyo4Async(string[] sUser, string sKey1, string sKey2) {
            this.Get_seigyo4Async(sUser, sKey1, sKey2, null);
        }
        
        /// <remarks/>
        public void Get_seigyo4Async(string[] sUser, string sKey1, string sKey2, object userState) {
            if ((this.Get_seigyo4OperationCompleted == null)) {
                this.Get_seigyo4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_seigyo4OperationCompleted);
            }
            this.InvokeAsync("Get_seigyo4", new object[] {
                        sUser,
                        sKey1,
                        sKey2}, this.Get_seigyo4OperationCompleted, userState);
        }
        
        private void OnGet_seigyo4OperationCompleted(object arg) {
            if ((this.Get_seigyo4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_seigyo4Completed(this, new Get_seigyo4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/Sel_Section", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Sel_Section(string[] sUser, string sKCode, string sBCode) {
            object[] results = this.Invoke("Sel_Section", new object[] {
                        sUser,
                        sKCode,
                        sBCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSel_Section(string[] sUser, string sKCode, string sBCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Sel_Section", new object[] {
                        sUser,
                        sKCode,
                        sBCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndSel_Section(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Sel_SectionAsync(string[] sUser, string sKCode, string sBCode) {
            this.Sel_SectionAsync(sUser, sKCode, sBCode, null);
        }
        
        /// <remarks/>
        public void Sel_SectionAsync(string[] sUser, string sKCode, string sBCode, object userState) {
            if ((this.Sel_SectionOperationCompleted == null)) {
                this.Sel_SectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSel_SectionOperationCompleted);
            }
            this.InvokeAsync("Sel_Section", new object[] {
                        sUser,
                        sKCode,
                        sBCode}, this.Sel_SectionOperationCompleted, userState);
        }
        
        private void OnSel_SectionOperationCompleted(object arg) {
            if ((this.Sel_SectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sel_SectionCompleted(this, new Sel_SectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB() {
            object[] results = this.Invoke("wakeupDB", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDBAsync() {
            this.wakeupDBAsync(null);
        }
        
        /// <remarks/>
        public void wakeupDBAsync(object userState) {
            if ((this.wakeupDBOperationCompleted == null)) {
                this.wakeupDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDBOperationCompleted);
            }
            this.InvokeAsync("wakeupDB", new object[0], this.wakeupDBOperationCompleted, userState);
        }
        
        private void OnwakeupDBOperationCompleted(object arg) {
            if ((this.wakeupDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDBCompleted(this, new wakeupDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Walkthrough/XmlWebServices/wakeupDB2", RequestNamespace="http://Walkthrough/XmlWebServices/", ResponseNamespace="http://Walkthrough/XmlWebServices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wakeupDB2(int iConCnt) {
            object[] results = this.Invoke("wakeupDB2", new object[] {
                        iConCnt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwakeupDB2(int iConCnt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("wakeupDB2", new object[] {
                        iConCnt}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwakeupDB2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt) {
            this.wakeupDB2Async(iConCnt, null);
        }
        
        /// <remarks/>
        public void wakeupDB2Async(int iConCnt, object userState) {
            if ((this.wakeupDB2OperationCompleted == null)) {
                this.wakeupDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnwakeupDB2OperationCompleted);
            }
            this.InvokeAsync("wakeupDB2", new object[] {
                        iConCnt}, this.wakeupDB2OperationCompleted, userState);
        }
        
        private void OnwakeupDB2OperationCompleted(object arg) {
            if ((this.wakeupDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wakeupDB2Completed(this, new wakeupDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Set_tanmatsuCompletedEventHandler(object sender, Set_tanmatsuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_tanmatsuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Set_tanmatsuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Upd_tanmatsuCompletedEventHandler(object sender, Upd_tanmatsuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upd_tanmatsuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upd_tanmatsuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Upd_riyouCompletedEventHandler(object sender, Upd_riyouCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upd_riyouCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upd_riyouCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_tanmatsu2CompletedEventHandler(object sender, Get_tanmatsu2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_tanmatsu2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_tanmatsu2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_tanmatsu3CompletedEventHandler(object sender, Get_tanmatsu3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_tanmatsu3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_tanmatsu3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_riyouCompletedEventHandler(object sender, Get_riyouCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_riyouCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_riyouCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_seikyuCompletedEventHandler(object sender, Get_seikyuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_seikyuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_seikyuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_jyotaiCompletedEventHandler(object sender, Get_jyotaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_jyotaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_jyotaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_syukabiCompletedEventHandler(object sender, Get_syukabiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_syukabiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_syukabiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_bumonCompletedEventHandler(object sender, Get_bumonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_bumonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_bumonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_messageCompletedEventHandler(object sender, Get_messageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_messageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_messageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_seigyoCompletedEventHandler(object sender, Get_seigyoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_seigyoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_seigyoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_seigyo2CompletedEventHandler(object sender, Get_seigyo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_seigyo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_seigyo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_seigyo3CompletedEventHandler(object sender, Get_seigyo3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_seigyo3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_seigyo3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Ins_seigyoCompletedEventHandler(object sender, Ins_seigyoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ins_seigyoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Ins_seigyoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Upd_seigyoCompletedEventHandler(object sender, Upd_seigyoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upd_seigyoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upd_seigyoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void login2CompletedEventHandler(object sender, login2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class login2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal login2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Upd_tanmatuCompletedEventHandler(object sender, Upd_tanmatuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upd_tanmatuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upd_tanmatuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void login3CompletedEventHandler(object sender, login3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class login3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal login3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_hatuten3CompletedEventHandler(object sender, Get_hatuten3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_hatuten3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_hatuten3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_KadobiCompletedEventHandler(object sender, Get_KadobiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_KadobiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_KadobiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_bumon2CompletedEventHandler(object sender, Get_bumon2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_bumon2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_bumon2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Get_seigyo4CompletedEventHandler(object sender, Get_seigyo4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_seigyo4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_seigyo4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Sel_SectionCompletedEventHandler(object sender, Sel_SectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sel_SectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sel_SectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDBCompletedEventHandler(object sender, wakeupDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void wakeupDB2CompletedEventHandler(object sender, wakeupDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wakeupDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wakeupDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591